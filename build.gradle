buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'http://repo.enonic.com/public'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "gradle.plugin.com.enonic.gradle:xp-gradle-plugin:1.0.17"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
        classpath "com.eriwen:gradle-js-plugin:2.12.0"
    }
}

apply plugin: 'com.enonic.xp.app'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.eriwen.gradle.js"

app {
    name = project.appName
    displayName = 'Data Toolbox'
    vendorName = 'Glenn Ricaud'
    vendorUrl = ''
    systemVersion = "${xpVersion}"
}

configurations {
    rcdjsfwkcore
    rcdjsfwkmaterial
}

dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:admin-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-context:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-io:${xpVersion}"
    include "com.enonic.xp:lib-repo:${xpVersion}"
    include "com.enonic.xp:lib-node:${xpVersion}"
    include "com.enonic.xp:lib-task:${xpVersion}"
    include 'com.enonic.lib:lib-mustache:2.0.0-SNAPSHOT'
    include "systems.rcd.fwk.core:rcd-fwk-core:7.2.0-SNAPSHOT"
    rcdjsfwkcore "systems.rcd.js.fwk.core:rcd-jsfwk-core:3.0.5"
    rcdjsfwkmaterial "systems.rcd.js.fwk.material:rcd-jsfwk-material:3.1.0-SNAPSHOT"
    compile "systems.rcd.js.fwk.core:rcd-jsfwk-core:3.0.5"
    compile "systems.rcd.js.fwk.material:rcd-jsfwk-material:3.1.0-SNAPSHOT"
    compile "org.elasticsearch:elasticsearch:2.4.6"
}



repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'http://repo.enonic.com/public'
    }
    maven {
        url "http://dl.bintray.com/rcd-systems/rcd-repo"
    }
}

task extractRcdJsFwk( type: Copy ) {
    from { configurations.rcdjsfwkcore.collect { zipTree( it ); } }
    from { configurations.rcdjsfwkmaterial.collect { zipTree( it ); } }
    into "${rootProject.buildDir}/resources/main/"
    exclude 'META-INF/**'
}
processResources.dependsOn extractRcdJsFwk


task mergeJsFwk( type: com.eriwen.gradle.js.tasks.CombineJsTask ) {
    source = ["${rootProject.buildDir}/resources/main/assets/js/rcd-jsfwk-core.js",
              "${rootProject.buildDir}/resources/main/assets/js/rcd-jsfwk-material.js"]
    dest = file( "${rootProject.buildDir}/resources/main/assets/js/rcd-jsfwk.js" )
}

//TODO Learn how to write Gradle builds
//TODO Replace this dirty workaround
task dirtyWidgetWorkaround( type: Copy, dependsOn: mergeJsFwk ) {
    def jsFwkFile = file( "${rootProject.buildDir}/resources/main/assets/js/rcd-jsfwk.js" )
    def jsFwkContent = jsFwkFile.exists() ? "\n" + jsFwkFile.getText( "UTF-8" ) : "error"
    def dataToolboxCommonFile = file( "${rootProject.buildDir}/resources/main/assets/js/data-toolbox-common.js" )
    def dataToolboxCommonContent = dataToolboxCommonFile.exists() ? "\n" + dataToolboxCommonFile.getText( "UTF-8" ) : "error"
    from "${rootProject.buildDir}/resources/main/assets/js"
    into "${rootProject.buildDir}/resources/main/assets/js"
    include 'export-template.js'
    rename( 'export-template.js', 'export.js' )
    filter( org.apache.tools.ant.filters.ReplaceTokens,
            tokens: [widgetWorkAround: jsFwkContent, widgetWorkAround2: dataToolboxCommonContent] )
}

//TODO Replace by proper plugin
task lessc( dependsOn: processResources ) << {
    exec {
        executable 'lessc'
        args 'build/resources/main/assets/style/main.less',
             'build/resources/main/assets/style/main.css'
    }
}
jar.dependsOn lessc
jar.dependsOn dirtyWidgetWorkaround


bintray {
    user = project.hasProperty( 'user' ) ? project.property( 'user' ) : "user"
    key = project.hasProperty( 'key' ) ? project.property( 'key' ) : "key"
    configurations = ['archives']
    pkg {
        repo = 'rcd-repo'
        name = 'datatoolbox'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/GlennRicaud/data-toolbox-app.git'
    }
}